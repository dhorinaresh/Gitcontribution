{"ast":null,"code":"export async function fetchContributionData(selectedOrg, selectedRepo, selectedUser) {\n  if (!selectedOrg || !selectedRepo || !selectedUser) {\n    console.error(\"❌ Missing filters: Organization, Repository, or User not selected.\");\n    return [];\n  }\n  const TOKEN = process.env.REACT_APP_GITHUB_PAT;\n  const baseUrl = `https://api.github.com/repos/${selectedOrg}/${selectedRepo}`;\n  try {\n    // Step 1: Fetch commits by user\n    const commitsRes = await fetch(`${baseUrl}/commits?author=${selectedUser}&per_page=100`, {\n      headers: {\n        Authorization: `token ${TOKEN}`\n      }\n    });\n    if (!commitsRes.ok) {\n      console.error(`❌ Failed to fetch commits: ${commitsRes.statusText}`);\n      return [];\n    }\n    const commits = await commitsRes.json();\n\n    // Step 2: Get details for each commit (stats: additions, deletions)\n    const detailedCommits = await Promise.all(commits.map(async commit => {\n      const commitUrl = `${baseUrl}/commits/${commit.sha}`;\n      const res = await fetch(commitUrl, {\n        headers: {\n          Authorization: `token ${TOKEN}`\n        }\n      });\n      if (!res.ok) {\n        console.warn(`⚠️ Skipping commit ${commit.sha} — ${res.statusText}`);\n        return null;\n      }\n      const detail = await res.json();\n      return {\n        sha: detail.sha,\n        date: detail.commit.author.date,\n        message: detail.commit.message,\n        additions: detail.stats.additions,\n        deletions: detail.stats.deletions\n      };\n    }));\n\n    // Step 3: Clean nulls and aggregate\n    const validCommits = detailedCommits.filter(Boolean);\n    const totalAdditions = validCommits.reduce((sum, c) => sum + c.additions, 0);\n    const totalDeletions = validCommits.reduce((sum, c) => sum + c.deletions, 0);\n    return [{\n      user: selectedUser,\n      repo: selectedRepo,\n      commits: validCommits.length,\n      additions: totalAdditions,\n      deletions: totalDeletions\n    }];\n  } catch (error) {\n    console.error(`❌ Error in fetchContributionData:`, error);\n    return [];\n  }\n}","map":{"version":3,"names":["fetchContributionData","selectedOrg","selectedRepo","selectedUser","console","error","TOKEN","process","env","REACT_APP_GITHUB_PAT","baseUrl","commitsRes","fetch","headers","Authorization","ok","statusText","commits","json","detailedCommits","Promise","all","map","commit","commitUrl","sha","res","warn","detail","date","author","message","additions","stats","deletions","validCommits","filter","Boolean","totalAdditions","reduce","sum","c","totalDeletions","user","repo","length"],"sources":["C:/Users/Naresh.D/Downloads/Github_Contributions_Dashboard/src/services/fetchCommits.js"],"sourcesContent":["export async function fetchContributionData(selectedOrg, selectedRepo, selectedUser) {\r\n    if (!selectedOrg || !selectedRepo || !selectedUser) {\r\n        console.error(\"❌ Missing filters: Organization, Repository, or User not selected.\");\r\n        return [];\r\n    }\r\n\r\n    const TOKEN = process.env.REACT_APP_GITHUB_PAT;\r\n    const baseUrl = `https://api.github.com/repos/${selectedOrg}/${selectedRepo}`;\r\n\r\n    try {\r\n        // Step 1: Fetch commits by user\r\n        const commitsRes = await fetch(`${baseUrl}/commits?author=${selectedUser}&per_page=100`, {\r\n            headers: { Authorization: `token ${TOKEN}` },\r\n        });\r\n\r\n        if (!commitsRes.ok) {\r\n            console.error(`❌ Failed to fetch commits: ${commitsRes.statusText}`);\r\n            return [];\r\n        }\r\n\r\n        const commits = await commitsRes.json();\r\n\r\n        // Step 2: Get details for each commit (stats: additions, deletions)\r\n        const detailedCommits = await Promise.all(\r\n            commits.map(async (commit) => {\r\n                const commitUrl = `${baseUrl}/commits/${commit.sha}`;\r\n                const res = await fetch(commitUrl, {\r\n                    headers: { Authorization: `token ${TOKEN}` },\r\n                });\r\n\r\n                if (!res.ok) {\r\n                    console.warn(`⚠️ Skipping commit ${commit.sha} — ${res.statusText}`);\r\n                    return null;\r\n                }\r\n\r\n                const detail = await res.json();\r\n                return {\r\n                    sha: detail.sha,\r\n                    date: detail.commit.author.date,\r\n                    message: detail.commit.message,\r\n                    additions: detail.stats.additions,\r\n                    deletions: detail.stats.deletions\r\n                };\r\n            })\r\n        );\r\n\r\n        // Step 3: Clean nulls and aggregate\r\n        const validCommits = detailedCommits.filter(Boolean);\r\n        const totalAdditions = validCommits.reduce((sum, c) => sum + c.additions, 0);\r\n        const totalDeletions = validCommits.reduce((sum, c) => sum + c.deletions, 0);\r\n\r\n        return [{\r\n            user: selectedUser,\r\n            repo: selectedRepo,\r\n            commits: validCommits.length,\r\n            additions: totalAdditions,\r\n            deletions: totalDeletions\r\n        }];\r\n\r\n    } catch (error) {\r\n        console.error(`❌ Error in fetchContributionData:`, error);\r\n        return [];\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAO,eAAeA,qBAAqBA,CAACC,WAAW,EAAEC,YAAY,EAAEC,YAAY,EAAE;EACjF,IAAI,CAACF,WAAW,IAAI,CAACC,YAAY,IAAI,CAACC,YAAY,EAAE;IAChDC,OAAO,CAACC,KAAK,CAAC,oEAAoE,CAAC;IACnF,OAAO,EAAE;EACb;EAEA,MAAMC,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;EAC9C,MAAMC,OAAO,GAAG,gCAAgCT,WAAW,IAAIC,YAAY,EAAE;EAE7E,IAAI;IACA;IACA,MAAMS,UAAU,GAAG,MAAMC,KAAK,CAAC,GAAGF,OAAO,mBAAmBP,YAAY,eAAe,EAAE;MACrFU,OAAO,EAAE;QAAEC,aAAa,EAAE,SAASR,KAAK;MAAG;IAC/C,CAAC,CAAC;IAEF,IAAI,CAACK,UAAU,CAACI,EAAE,EAAE;MAChBX,OAAO,CAACC,KAAK,CAAC,8BAA8BM,UAAU,CAACK,UAAU,EAAE,CAAC;MACpE,OAAO,EAAE;IACb;IAEA,MAAMC,OAAO,GAAG,MAAMN,UAAU,CAACO,IAAI,CAAC,CAAC;;IAEvC;IACA,MAAMC,eAAe,GAAG,MAAMC,OAAO,CAACC,GAAG,CACrCJ,OAAO,CAACK,GAAG,CAAC,MAAOC,MAAM,IAAK;MAC1B,MAAMC,SAAS,GAAG,GAAGd,OAAO,YAAYa,MAAM,CAACE,GAAG,EAAE;MACpD,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACY,SAAS,EAAE;QAC/BX,OAAO,EAAE;UAAEC,aAAa,EAAE,SAASR,KAAK;QAAG;MAC/C,CAAC,CAAC;MAEF,IAAI,CAACoB,GAAG,CAACX,EAAE,EAAE;QACTX,OAAO,CAACuB,IAAI,CAAC,sBAAsBJ,MAAM,CAACE,GAAG,MAAMC,GAAG,CAACV,UAAU,EAAE,CAAC;QACpE,OAAO,IAAI;MACf;MAEA,MAAMY,MAAM,GAAG,MAAMF,GAAG,CAACR,IAAI,CAAC,CAAC;MAC/B,OAAO;QACHO,GAAG,EAAEG,MAAM,CAACH,GAAG;QACfI,IAAI,EAAED,MAAM,CAACL,MAAM,CAACO,MAAM,CAACD,IAAI;QAC/BE,OAAO,EAAEH,MAAM,CAACL,MAAM,CAACQ,OAAO;QAC9BC,SAAS,EAAEJ,MAAM,CAACK,KAAK,CAACD,SAAS;QACjCE,SAAS,EAAEN,MAAM,CAACK,KAAK,CAACC;MAC5B,CAAC;IACL,CAAC,CACL,CAAC;;IAED;IACA,MAAMC,YAAY,GAAGhB,eAAe,CAACiB,MAAM,CAACC,OAAO,CAAC;IACpD,MAAMC,cAAc,GAAGH,YAAY,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGC,CAAC,CAACT,SAAS,EAAE,CAAC,CAAC;IAC5E,MAAMU,cAAc,GAAGP,YAAY,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGC,CAAC,CAACP,SAAS,EAAE,CAAC,CAAC;IAE5E,OAAO,CAAC;MACJS,IAAI,EAAExC,YAAY;MAClByC,IAAI,EAAE1C,YAAY;MAClBe,OAAO,EAAEkB,YAAY,CAACU,MAAM;MAC5Bb,SAAS,EAAEM,cAAc;MACzBJ,SAAS,EAAEQ;IACf,CAAC,CAAC;EAEN,CAAC,CAAC,OAAOrC,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,OAAO,EAAE;EACb;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}