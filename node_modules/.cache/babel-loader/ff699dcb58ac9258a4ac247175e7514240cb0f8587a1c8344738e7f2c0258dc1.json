{"ast":null,"code":"export const fetchContributionData = async (org, repo, user) => {\n  try {\n    const response = await fetch(`https://api.github.com/repos/${org}/${repo}/commits?author=${user}`);\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch data\");\n    }\n    const commits = await response.json();\n    return commits.map(commit => ({\n      commit_id: commit.sha,\n      message: commit.commit.message,\n      date: commit.commit.author.date\n    }));\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    return [];\n  }\n};","map":{"version":3,"names":["fetchContributionData","org","repo","user","response","fetch","ok","Error","commits","json","map","commit","commit_id","sha","message","date","author","error","console"],"sources":["C:/Users/Naresh.D/Downloads/Github_Contributions_Dashboard/src/services/fetchCommits.js"],"sourcesContent":["export const fetchContributionData = async (org, repo, user) => {\r\n    try {\r\n        const response = await fetch(`https://api.github.com/repos/${org}/${repo}/commits?author=${user}`);\r\n\r\n        if (!response.ok) {\r\n            throw new Error(\"Failed to fetch data\");\r\n        }\r\n\r\n        const commits = await response.json();\r\n        return commits.map(commit => ({\r\n            commit_id: commit.sha,\r\n            message: commit.commit.message,\r\n            date: commit.commit.author.date\r\n        }));\r\n    } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        return [];\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC5D,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgCJ,GAAG,IAAIC,IAAI,mBAAmBC,IAAI,EAAE,CAAC;IAElG,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IAC3C;IAEA,MAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACE,GAAG,CAACC,MAAM,KAAK;MAC1BC,SAAS,EAAED,MAAM,CAACE,GAAG;MACrBC,OAAO,EAAEH,MAAM,CAACA,MAAM,CAACG,OAAO;MAC9BC,IAAI,EAAEJ,MAAM,CAACA,MAAM,CAACK,MAAM,CAACD;IAC/B,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,EAAE;EACb;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}