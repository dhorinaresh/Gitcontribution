{"ast":null,"code":"const GITHUB_PAT = process.env.REACT_APP_GITHUB_PAT; // Load from .env file\nconst API_BASE_URL = \"https://api.github.com/repos\"; // GitHub API Base\n\nconst repositories = [\"LobbyClientUI-R1\", \"LobbyAdminServerAPI-R1\", \"LobbyHeartbeatAutomationUI-R1\", \"HubspotIntegrationAPI-R1\", \"LobbyMiddlewareAPI-R1\", \"LobbyAdminPanelUI-R1\", \"LobbyServerAPI-R1\"];\n\n// Fetch commits for a specific repository\nexport const fetchContributions = async repoName => {\n  if (!repositories.includes(repoName)) {\n    console.error(\"Repository not allowed:\", repoName);\n    return [];\n  }\n  try {\n    const response = await fetch(`${API_BASE_URL}/YourOrg/${repoName}/commits`, {\n      headers: {\n        Authorization: `token ${GITHUB_PAT}`,\n        Accept: \"application/vnd.github.v3+json\"\n      }\n    });\n    if (!response.ok) throw new Error(\"Failed to fetch data\");\n    const data = await response.json();\n    return data.map(commit => ({\n      author: commit.commit.author.name,\n      date: commit.commit.author.date\n    }));\n  } catch (error) {\n    console.error(\"Error fetching commits:\", error);\n    return [];\n  }\n};","map":{"version":3,"names":["GITHUB_PAT","process","env","REACT_APP_GITHUB_PAT","API_BASE_URL","repositories","fetchContributions","repoName","includes","console","error","response","fetch","headers","Authorization","Accept","ok","Error","data","json","map","commit","author","name","date"],"sources":["C:/Users/Naresh.D/Desktop/project/Github_Contributions_Dashboard/src/services/githubService.js"],"sourcesContent":["const GITHUB_PAT = process.env.REACT_APP_GITHUB_PAT; // Load from .env file\r\nconst API_BASE_URL = \"https://api.github.com/repos\"; // GitHub API Base\r\n\r\nconst repositories = [\r\n  \"LobbyClientUI-R1\",\r\n  \"LobbyAdminServerAPI-R1\",\r\n  \"LobbyHeartbeatAutomationUI-R1\",\r\n  \"HubspotIntegrationAPI-R1\",\r\n  \"LobbyMiddlewareAPI-R1\",\r\n  \"LobbyAdminPanelUI-R1\",\r\n  \"LobbyServerAPI-R1\",\r\n];\r\n\r\n// Fetch commits for a specific repository\r\nexport const fetchContributions = async (repoName) => {\r\n  if (!repositories.includes(repoName)) {\r\n    console.error(\"Repository not allowed:\", repoName);\r\n    return [];\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(\r\n      `${API_BASE_URL}/YourOrg/${repoName}/commits`,\r\n      {\r\n        headers: {\r\n          Authorization: `token ${GITHUB_PAT}`,\r\n          Accept: \"application/vnd.github.v3+json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) throw new Error(\"Failed to fetch data\");\r\n\r\n    const data = await response.json();\r\n    return data.map((commit) => ({\r\n      author: commit.commit.author.name,\r\n      date: commit.commit.author.date,\r\n    }));\r\n  } catch (error) {\r\n    console.error(\"Error fetching commits:\", error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB,CAAC,CAAC;AACrD,MAAMC,YAAY,GAAG,8BAA8B,CAAC,CAAC;;AAErD,MAAMC,YAAY,GAAG,CACnB,kBAAkB,EAClB,wBAAwB,EACxB,+BAA+B,EAC/B,0BAA0B,EAC1B,uBAAuB,EACvB,sBAAsB,EACtB,mBAAmB,CACpB;;AAED;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;EACpD,IAAI,CAACF,YAAY,CAACG,QAAQ,CAACD,QAAQ,CAAC,EAAE;IACpCE,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEH,QAAQ,CAAC;IAClD,OAAO,EAAE;EACX;EAEA,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGR,YAAY,YAAYG,QAAQ,UAAU,EAC7C;MACEM,OAAO,EAAE;QACPC,aAAa,EAAE,SAASd,UAAU,EAAE;QACpCe,MAAM,EAAE;MACV;IACF,CACF,CAAC;IAED,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IAEzD,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,GAAG,CAAEC,MAAM,KAAM;MAC3BC,MAAM,EAAED,MAAM,CAACA,MAAM,CAACC,MAAM,CAACC,IAAI;MACjCC,IAAI,EAAEH,MAAM,CAACA,MAAM,CAACC,MAAM,CAACE;IAC7B,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}