{"ast":null,"code":"export async function fetchContributionData() {\n  const USERS = [\"ArulTEG\", \"ArunPrem_APP\", \"deepesh-tech\", \"Mukul Kumar\", \"suneelkumar02\", \"dhorinaresh\"];\n  const REPOSITORIES = [\"LobbyClientUI-R1\", \"LobbyAdminServerAPI-R1\", \"LobbyHeartbeatAutomationUI-R1\", \"HubspotIntegrationAPI-R1\", \"LobbyMiddlewareAPI-R1\", \"LobbyAdminPanelUI-R1\", \"LobbyServerAPI-R1\"];\n  const ORG_NAME = \"HWAI-CST\";\n  const TOKEN = process.env.REACT_APP_GITHUB_PAT;\n  let contributions = [];\n  for (const repo of REPOSITORIES) {\n    const url = `https://api.github.com/repos/${ORG_NAME}/${repo}/commits`;\n    try {\n      const response = await fetch(url, {\n        headers: {\n          Authorization: `token ${TOKEN}`\n        }\n      });\n      const data = await response.json();\n      console.log(`📢 API Response for ${repo}:`, data);\n      if (response.status !== 200) {\n        console.error(`❌ Error Fetching: ${repo}`, data.message);\n        continue;\n      }\n      data.forEach(commit => {\n        if (commit.author && USERS.includes(commit.author.login)) {\n          const username = commit.author.login;\n          const existingEntry = contributions.find(entry => entry.user === username && entry.repository === repo);\n          if (existingEntry) {\n            existingEntry.count += 1;\n          } else {\n            contributions.push({\n              user: username,\n              repository: repo,\n              count: 1\n            });\n          }\n        }\n      });\n    } catch (error) {\n      console.error(`❌ API Error for ${repo}:`, error);\n    }\n  }\n\n  // Calculate total contributions\n  const totalCommits = contributions.reduce((sum, entry) => sum + entry.count, 0);\n\n  // Convert to percentage\n  contributions = contributions.map(entry => ({\n    ...entry,\n    percentage: (entry.count / totalCommits * 100).toFixed(2)\n  }));\n  console.log(\"✅ Final Contribution Data:\", contributions);\n  return contributions;\n}","map":{"version":3,"names":["fetchContributionData","USERS","REPOSITORIES","ORG_NAME","TOKEN","process","env","REACT_APP_GITHUB_PAT","contributions","repo","url","response","fetch","headers","Authorization","data","json","console","log","status","error","message","forEach","commit","author","includes","login","username","existingEntry","find","entry","user","repository","count","push","totalCommits","reduce","sum","map","percentage","toFixed"],"sources":["C:/Users/Naresh.D/Desktop/project/Github_Contributions_Dashboard/src/services/fetchCommits.js"],"sourcesContent":["export async function fetchContributionData() {\r\n  const USERS = [\r\n    \"ArulTEG\",\r\n    \"ArunPrem_APP\",\r\n    \"deepesh-tech\",\r\n    \"Mukul Kumar\",\r\n    \"suneelkumar02\",\r\n    \"dhorinaresh\",\r\n  ];\r\n  const REPOSITORIES = [\r\n    \"LobbyClientUI-R1\",\r\n    \"LobbyAdminServerAPI-R1\",\r\n    \"LobbyHeartbeatAutomationUI-R1\",\r\n    \"HubspotIntegrationAPI-R1\",\r\n    \"LobbyMiddlewareAPI-R1\",\r\n    \"LobbyAdminPanelUI-R1\",\r\n    \"LobbyServerAPI-R1\",\r\n  ];\r\n  const ORG_NAME = \"HWAI-CST\";\r\n  const TOKEN = process.env.REACT_APP_GITHUB_PAT;\r\n\r\n  let contributions = [];\r\n\r\n  for (const repo of REPOSITORIES) {\r\n    const url = `https://api.github.com/repos/${ORG_NAME}/${repo}/commits`;\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        headers: { Authorization: `token ${TOKEN}` },\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(`📢 API Response for ${repo}:`, data);\r\n\r\n      if (response.status !== 200) {\r\n        console.error(`❌ Error Fetching: ${repo}`, data.message);\r\n        continue;\r\n      }\r\n\r\n      data.forEach((commit) => {\r\n        if (commit.author && USERS.includes(commit.author.login)) {\r\n          const username = commit.author.login;\r\n          const existingEntry = contributions.find(\r\n            (entry) => entry.user === username && entry.repository === repo\r\n          );\r\n\r\n          if (existingEntry) {\r\n            existingEntry.count += 1;\r\n          } else {\r\n            contributions.push({\r\n              user: username,\r\n              repository: repo,\r\n              count: 1,\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(`❌ API Error for ${repo}:`, error);\r\n    }\r\n  }\r\n\r\n  // Calculate total contributions\r\n  const totalCommits = contributions.reduce(\r\n    (sum, entry) => sum + entry.count,\r\n    0\r\n  );\r\n\r\n  // Convert to percentage\r\n  contributions = contributions.map((entry) => ({\r\n    ...entry,\r\n    percentage: ((entry.count / totalCommits) * 100).toFixed(2),\r\n  }));\r\n\r\n  console.log(\"✅ Final Contribution Data:\", contributions);\r\n\r\n  return contributions;\r\n}\r\n"],"mappings":"AAAA,OAAO,eAAeA,qBAAqBA,CAAA,EAAG;EAC5C,MAAMC,KAAK,GAAG,CACZ,SAAS,EACT,cAAc,EACd,cAAc,EACd,aAAa,EACb,eAAe,EACf,aAAa,CACd;EACD,MAAMC,YAAY,GAAG,CACnB,kBAAkB,EAClB,wBAAwB,EACxB,+BAA+B,EAC/B,0BAA0B,EAC1B,uBAAuB,EACvB,sBAAsB,EACtB,mBAAmB,CACpB;EACD,MAAMC,QAAQ,GAAG,UAAU;EAC3B,MAAMC,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;EAE9C,IAAIC,aAAa,GAAG,EAAE;EAEtB,KAAK,MAAMC,IAAI,IAAIP,YAAY,EAAE;IAC/B,MAAMQ,GAAG,GAAG,gCAAgCP,QAAQ,IAAIM,IAAI,UAAU;IAEtE,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;QAChCG,OAAO,EAAE;UAAEC,aAAa,EAAE,SAASV,KAAK;QAAG;MAC7C,CAAC,CAAC;MAEF,MAAMW,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,uBAAuBT,IAAI,GAAG,EAAEM,IAAI,CAAC;MAEjD,IAAIJ,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;QAC3BF,OAAO,CAACG,KAAK,CAAC,qBAAqBX,IAAI,EAAE,EAAEM,IAAI,CAACM,OAAO,CAAC;QACxD;MACF;MAEAN,IAAI,CAACO,OAAO,CAAEC,MAAM,IAAK;QACvB,IAAIA,MAAM,CAACC,MAAM,IAAIvB,KAAK,CAACwB,QAAQ,CAACF,MAAM,CAACC,MAAM,CAACE,KAAK,CAAC,EAAE;UACxD,MAAMC,QAAQ,GAAGJ,MAAM,CAACC,MAAM,CAACE,KAAK;UACpC,MAAME,aAAa,GAAGpB,aAAa,CAACqB,IAAI,CACrCC,KAAK,IAAKA,KAAK,CAACC,IAAI,KAAKJ,QAAQ,IAAIG,KAAK,CAACE,UAAU,KAAKvB,IAC7D,CAAC;UAED,IAAImB,aAAa,EAAE;YACjBA,aAAa,CAACK,KAAK,IAAI,CAAC;UAC1B,CAAC,MAAM;YACLzB,aAAa,CAAC0B,IAAI,CAAC;cACjBH,IAAI,EAAEJ,QAAQ;cACdK,UAAU,EAAEvB,IAAI;cAChBwB,KAAK,EAAE;YACT,CAAC,CAAC;UACJ;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,mBAAmBX,IAAI,GAAG,EAAEW,KAAK,CAAC;IAClD;EACF;;EAEA;EACA,MAAMe,YAAY,GAAG3B,aAAa,CAAC4B,MAAM,CACvC,CAACC,GAAG,EAAEP,KAAK,KAAKO,GAAG,GAAGP,KAAK,CAACG,KAAK,EACjC,CACF,CAAC;;EAED;EACAzB,aAAa,GAAGA,aAAa,CAAC8B,GAAG,CAAER,KAAK,KAAM;IAC5C,GAAGA,KAAK;IACRS,UAAU,EAAE,CAAET,KAAK,CAACG,KAAK,GAAGE,YAAY,GAAI,GAAG,EAAEK,OAAO,CAAC,CAAC;EAC5D,CAAC,CAAC,CAAC;EAEHvB,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEV,aAAa,CAAC;EAExD,OAAOA,aAAa;AACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}